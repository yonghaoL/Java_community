<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learn.community.dao.UserMapper"> <!--写mapper的路径以对应-->

    <!--相当于可复用的参数-->
    <sql id="insertFields">
        username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>

    <sql id="selectFields">
        id, username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>

    <!--以下面的为例介绍查询-->
    <!--select：数据库操作语句。id：对应UserMapper中的方法名（严格对应）。resultType：返回值类型，
    应该是com.learn.community.entity.User类，但配置文件里面写了前缀，所以可以省略。-->
    <select id="selectById" resultType="User">
        select <include refid="selectFields"></include> <!--引用了前面定义的参数，等价于 username, password, salt, email, type, status, activation_code, header_url, create_time-->
        from user
        where id = #{id} <!--#{id}表示调用方法时的参数(int id)-->
    </select>

    <select id="selectByName" resultType="User">
        select <include refid="selectFields"></include>
        from user
        where username = #{username}
    </select>

    <select id="selectByEmail" resultType="User">
        select <include refid="selectFields"></include>
        from user
        where email = #{email}
    </select>

    <!--参数应该都很好理解：对应操作；参数的类型；主键属性（因为插入时mysql自动赋予id值给User，为了让mybatis拿到该主键，得指明主键属性）-->
    <insert id="insertUser" parameterType="User" keyProperty="id">
        insert into user (<include refid="insertFields"></include>) <!--注意上面的字段中没有id，因为id是mysql自动生成的-->
        values(#{username}, #{password}, #{salt}, #{email}, #{type}, #{status}, #{activationCode}, #{headerUrl}, #{createTime}) <!--#{}的参数都是引用了参数User user中的值-->
    </insert>

    <!--一般查询需要声明返回值类型，插入需要声明参数类型，更新则不用（因为较简单）-->
    <update id="updateStatus">
        update user set status = #{status} where id = #{id}
    </update>

    <update id="updateHeader">
        update user set header_url = #{headerUrl} where id = #{id}
    </update>

    <update id="updatePassword">
        update user set password = #{password} where id = #{id}
    </update>

</mapper>